{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","actions","CartItem","dispatch","useDispatch","title","total","toFixed","itemprice","details","onClick","Cart","useSelector","cart","map","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","uiActions","CartButton","button","undefined","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","ui","useEffect","a","fetchData","fetch","response","ok","Error","json","data","cartData","console","log","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3fe041c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__xAyld\",\"details\":\"CartItem_details__1EZHk\",\"quantity\":\"CartItem_quantity__2QqmG\",\"price\":\"CartItem_price__hbnjT\",\"itemprice\":\"CartItem_itemprice__2Y1l1\",\"actions\":\"CartItem_actions__1vJqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2zHJV\",\"price\":\"ProductItem_price__24j8B\",\"actions\":\"ProductItem_actions__2ARKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__37TlO\",\"error\":\"Notification_error__16P3q\",\"success\":\"Notification_success__3ktqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3-wtj\",\"badge\":\"CartButton_badge__2vB80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__cvmTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__1ZiMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__36SPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__3qUf4\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false,\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity\n        ? action.payload.totalQuantity\n        : 0;\n      state.items = action.payload.items ? action.payload.items : [];\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.name,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n","import classes from \"./CartItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const addItemHandler = () => {\n    dispatch(cartActions.addItemToCart({ id, title, quantity, total, price }));\n  };\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  const { id, title, quantity, total, price } = props.item;\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\nimport { useSelector } from \"react-redux\";\n\nconst Cart = (props) => {\n  const itemsSelector = (state) => state.cart.items;\n  const items = useSelector(itemsSelector);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {items.map((item) => (\n          <CartItem\n            key={item.id}\n            item={{\n              title: item.name,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n              id: item.id,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: { cartIsVisible: false, notification: null },\n  reducers: {\n    toggle(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const uiActions = uiSlice.actions;\nexport default uiSlice;\n","import classes from \"./CartButton.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const totalQuantitySelector = (state) => state.cart.totalQuantity;\n  const totalQuantity = useSelector(totalQuantitySelector);\n\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle(undefined));\n  };\n\n  return (\n    <button className={classes.button} onClick={toggleCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const addToCartHandler = () => {\n    dispatch(cartActions.addItemToCart({ id, price, title }));\n  };\n\n  const { title, price, description, id } = props;\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id: \"P1\",\n    price: 142.5,\n    title: \"Alice Marta Bag\",\n    description: \"Nute - Khaki\",\n  },\n  {\n    id: \"P2\",\n    price: 31.1,\n    title: \"Marhen.J\",\n    description: \"KONY POCKET Beige\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => (\n          <ProductItem\n            key={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n            id={product.id}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\n\nconst Notification = (props) => {\n  let specialClasses = \"\";\n\n  if (props.status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (props.status === \"success\") {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport Notification from \"./components/UI/Notification\";\nimport { fetchCartData, sendCartData } from \"./store/cart-actions\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const selectCartIsVisible = (state) => state.ui.cartIsVisible;\n  const showCart = useSelector(selectCartIsVisible);\n\n  const selectCart = (state) => state.cart;\n  const cart = useSelector(selectCart);\n\n  const selectNotification = (state) => state.ui.notification;\n  const notification = useSelector(selectNotification);\n\n  useEffect(() => {\n    dispatch(fetchCartData(undefined));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://myapptest-30de9-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data!\");\n      }\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      console.log(error);\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Get cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://myapptest-30de9-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Send cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      console.log(error);\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Send cart data failed!\",\n        })\n      );\n    }\n  };\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport uiSlice from \"./ui-slice\";\nimport cartSlice from \"./cart-slice\";\n\nconst store = configureStore({\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\n});\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}